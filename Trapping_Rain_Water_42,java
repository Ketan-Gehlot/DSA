class Solution {
    public int trap(int[] height) {
        int n=height.length;// Created n For the sizee of array
        int leftmax[]=new int[n];//created leftmax array for stroring value of leftmost pillar
        leftmax[0]=height[0];//gave inital value to leftmax of height 0th index
        for(int i=1;i<n;i++){//Started the loop to check left max pillar
            leftmax[i]=Math.max(height[i],leftmax[i-1]);
        }
        int rightmax[]=new int[n];//Everything same for right pillar also
         rightmax[n-1]=height[n-1];

        for(int i=n-2;i>=0;i--){
            rightmax[i]=Math.max(height[i],rightmax[i+1]);
        }

        int Trpawater = 0;//Intial set value to 0 for adding the number of water stored

        for(int i=0;i<n;i++){//loop for finding stored water and finding the total trapwater
            int waterlvl=Math.min(leftmax[i],rightmax[i]);//Usingmath function to find minimum from both the left max and right max 

            //after finding the min of both the minimum value which we got - the height of current bar this is how we find trapped water
            Trpawater += waterlvl-height[i];
        }
        return Trpawater;
    }
}
